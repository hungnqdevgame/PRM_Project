# S·ª≠ d·ª•ng image SQL Server 2022
FROM mcr.microsoft.com/mssql/server:2022-latest

# Thi·∫øt l·∫≠p bi·∫øn m√¥i tr∆∞·ªùng b·∫Øt bu·ªôc
ENV ACCEPT_EULA=Y
ENV MSSQL_SA_PASSWORD=PRM232@123
ENV MSSQL_PID=Express

# C√†i ƒë·∫∑t sqlcmd tools
USER root
RUN apt-get update && \
    apt-get install -y curl apt-transport-https gnupg netcat && \
    curl -sSL https://packages.microsoft.com/keys/microsoft.asc | apt-key add - && \
    curl -sSL https://packages.microsoft.com/config/ubuntu/22.04/prod.list -o /etc/apt/sources.list.d/mssql-release.list && \
    apt-get update && \
    ACCEPT_EULA=Y apt-get install -y mssql-tools18 unixodbc-dev && \
    echo 'export PATH="$PATH:/opt/mssql-tools18/bin"' >> ~/.bashrc && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Copy file .bak v√†o container
RUN mkdir -p /var/opt/mssql/backup
COPY ./backup/SalesAppDB.bak /var/opt/mssql/backup/SalesAppDB.bak

EXPOSE 1433

# Script entrypoint ƒë·ªÉ ch·ªù SQL th·∫≠t s·ª± s·∫µn s√†ng
CMD /opt/mssql/bin/sqlservr & \
    echo "üïì Waiting for SQL Server to start..." && \
    for i in {1..60}; do \
        nc -z localhost 1433 && echo "‚úÖ SQL Server is up!" && break; \
        echo "‚è≥ Still waiting... ($i/60)" && sleep 5; \
    done; \
    echo "üöÄ Restoring database from .bak..." && \
    /opt/mssql-tools18/bin/sqlcmd -S localhost -U SA -P "$MSSQL_SA_PASSWORD" -C \
    -Q "RESTORE DATABASE [SalesAppDB] FROM DISK = N'/var/opt/mssql/backup/SalesAppDB.bak' WITH MOVE 'SalesAppDB' TO '/var/opt/mssql/data/SalesAppDB.mdf', MOVE 'SalesAppDB_log' TO '/var/opt/mssql/data/SalesAppDB_log.ldf', REPLACE" && \
    echo "‚úÖ Restore completed successfully!" && \
    tail -f /dev/null
